@using System.Configuration;
@{
    ViewData["Title"] = "Login";
}
<!-- Latest CDN production Javascript and CSS -->
<script src="https://global.oktacdn.com/okta-signin-widget/5.2.0/js/okta-sign-in.min.js" type="text/javascript"></script>
<link href="https://global.oktacdn.com/okta-signin-widget/5.2.0/css/okta-sign-in.min.css" type="text/css" rel="stylesheet" />
<link href="~/Content/okta-login.css" type="text/css" rel="stylesheet" />

<div id="widget"></div>
<form method="POST" asp-action="Login">
    <input type="hidden" name="sessionToken" id="hiddenSessionTokenField" />
    @Html.AntiForgeryToken()
</form>

<script type="text/javascript">

    var signIn = new OktaSignIn({
        baseUrl: '@ConfigurationManager.AppSettings["okta:OktaDomain"]',
        customButtons: [{
            title: 'Sign in with Facebook',
            className: 'social-auth-button social-auth-facebook-button link-button',
            click: function () {
                window.location = new URL('/Account/LoginWithIdp?idp=@ConfigurationManager.AppSettings["okta:FacebookIdp"]', window.location);
            }
        },
        {
            title: 'Sign in with Google',
            className: 'social-auth-button social-auth-google-button link-button',
            click: function() {
                window.location = new URL('/Account/LoginWithIdp?idp=@ConfigurationManager.AppSettings["okta:GoogleIdp"]', window.location);
            }
        }]
    });

    signIn.renderEl({ el: '#widget' }, (res) => {
        var sessionTokenField = $("#hiddenSessionTokenField");
        sessionTokenField.val(res.session.token);
        var form = sessionTokenField.parent();
        form.submit();
    }, (err) => {
        console.error(err);
    });
</script>